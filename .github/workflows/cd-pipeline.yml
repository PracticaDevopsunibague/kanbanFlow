name: CD Pipeline - Deploy to Azure

on:
  workflow_run:
    workflows: ["CI Pipeline - Build and Test"]
    types:
      - completed
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    
    steps:
    # Tarea 1: Agregar artifact (extraer archivos) y configurar
    - name: Download artifact from CI pipeline
      uses: dawidd6/action-download-artifact@v3
      with:
        name: kanbanflow-build
        workflow: ci-pipeline.yml
        run_id: ${{ github.event.workflow_run.id }}
        github_token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Extract deployment package
      run: |
        unzip kanbanflow-deployment.zip
        ls -la deployment-package/
        
    # Tarea 2: Agregar stage (empty job) y configurar
    - name: Prepare deployment stage
      run: |
        echo "=== DEPLOYMENT STAGE CONFIGURATION ==="
        echo "Environment: Production"
        echo "Target: Azure App Service"
        echo "App Name: kanbanflow"
        echo "Resource Group: DefaultResourceGroup-CQ"
        echo "========================================="
        
    # Tarea 3: Agregar tarea a stage (extraer archivo-tarea) y configurar
    - name: Configure deployment files
      run: |
        cd deployment-package
        # Configurar archivos para Azure
        echo "Configuring deployment files..."
        
        # Crear startup command para Azure
        echo "python -m gunicorn kanbanflow.wsgi:application" > startup.txt
        
        # Verificar estructura de archivos
        echo "Deployment structure:"
        find . -type f -name "*.py" | head -10
        
    # Tarea 4: Crear cuenta azure (ya existe)
    - name: Azure Account Configuration
      run: |
        echo "=== AZURE ACCOUNT DETAILS ==="
        echo "Subscription: Azure for Students"
        echo "Subscription ID: 9eef1f12-411b-4b3e-acf6-8707ba0c451b"
        echo "Resource Group: DefaultResourceGroup-CQ"
        echo "Location: Canada Central"
        echo "============================="
        
    # Tarea 5: Crear sitio azure (ya existe)
    - name: Azure App Service Details
      run: |
        echo "=== AZURE APP SERVICE ==="
        echo "App Name: kanbanflow"
        echo "URL: https://kanbanflow-gng0cycmg3arazgf.canadacentral-01.azurewebsites.net"
        echo "Runtime: Python 3.10"
        echo "OS: Linux"
        echo "Plan: Basic (B1)"
        echo "========================"
        
    # Verificar secret de Azure
    - name: Check Azure credentials
      run: |
        if [ -z "${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}" ]; then
          echo "ERROR: AZURE_WEBAPP_PUBLISH_PROFILE secret not found!"
          echo "Please add the publish profile to GitHub secrets."
          exit 1
        else
          echo "Azure credentials found ✓"
        fi
        
    # Tarea 6: Agregar tarea a stage (deploy azure)
    - name: Deploy to Azure Web App
      id: deploy-to-webapp
      uses: azure/webapps-deploy@v2
      with:
        app-name: 'kanbanflow'
        slot-name: 'Production'
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        package: './deployment-package'
        
    # Verificación post-deployment
    - name: Post-deployment verification
      run: |
        echo "=== DEPLOYMENT COMPLETED ==="
        echo "Application URL: https://kanbanflow-gng0cycmg3arazgf.canadacentral-01.azurewebsites.net"
        echo "Deployment Status: Success"
        echo "Timestamp: $(date)"
        echo "============================"
        
        # Verificar que el sitio responda
        sleep 30
        curl -f https://kanbanflow-gng0cycmg3arazgf.canadacentral-01.azurewebsites.net || echo "Site not ready yet"